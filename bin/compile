#!/usr/bin/env bash
# Perform the transformation steps on the app.
#
# Usage: bin/compile BUILD_DIR CACHE_DIR ENV_DIR

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

info() {
  echo "       $*"
}

output() {
  while read LINE;
  do
    echo "       $LINE"
  done
}

header() {
  echo ""
  echo "-----> $*"
}

error() {
  echo " !     $*" >&2
  echo ""
}

install_heroku_cli() {
  echo "WIP"
}

install_aws_cli() {
  local destination_dir=${1:-}
  local temp_dir="/tmp"
  local url="https://s3.amazonaws.com/aws-cli/awscli-bundle.zip"

  echo -n "Downloading and extracting bundle... "
  curl $url --silent \
            --output "$temp_dir/awscli-bundle.zip"
  unzip -q "$temp_dir/awscli-bundle.zip" -d $temp_dir
  echo "done."

  echo -n "Installing... "
  sh "$temp_dir/awscli-bundle/install" --install-dir="$destination_dir/aws-cli"
  rm -rf "$temp_dir/awscli-bundle"
  echo "done."
}

main() {
  local vendor_dir="$BUILD_DIR/vendor"

  mkdir -p $vendor_dir

  header "Installing AWS CLI"
  install_aws_cli $vendor_dir | output

  header "Installing Heroku Toolbelt"
  install_heroku_cli $vendor_dir | output
}

main
